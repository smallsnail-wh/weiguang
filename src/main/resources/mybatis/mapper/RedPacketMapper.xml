<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wh.weiguang.dao.RedPacketDao">
	<resultMap id="redPacketMap"
		type="com.wh.weiguang.model.money.RedPacketDetailEntity">
		<id column="advid" property="advid" />
		<id column="userid" property="userid" />
		<result column="money" property="money" />
		<result column="time" property="time" />
	</resultMap>

	<resultMap id="redPacketModelMap"
		type="com.wh.weiguang.model.money.RedPacketDetailModel">
		<id column="advid" property="advid" />
		<id column="userid" property="userid" />
		<result column="money" property="money" />
		<result column="time" property="time" />
		<result column="user_name" property="userName" />
		<result column="headimgurl" property="headimgurl" />
	</resultMap>

	<select id="getCount" resultType="Integer">
		select count(1) from red_packet_details
		<where>
			advid = #{advid} and userid = #{userid}
		</where>
	</select>

	<insert id="insert" parameterType="RedPacketDetailEntity">
		insert into red_packet_details
		(advid,userid,money,time)
		values (#{advid},#{userid},#{money},#{time})
	</insert>

	<select id="getDetailByAdvid" resultMap="redPacketModelMap">
		select a.*,b.name
		user_name,b.headimgurl from red_packet_details a
		left join sys_user b on a.userid = b.id
		<where>
			a.advid = #{advid}
		</where>
	</select>

	<update id="secondInsert" parameterType="RedPacketDetailEntity">
		update red_packet_details set money = money+${money} ,time = #{time}
		<where>
			advid = #{time} and userid = #{userid}
		</where>
	</update>

	<select id="getCount1" resultType="Double">
		select sum(money) from red_packet_details
	</select>
	
	<select id="getCount2" resultType="Double">
		select sum(money) from red_packet_details
		<where> 
			`time` &gt; #{timeStart} and `time` &lt; #{timeEnd}
		</where>
	</select>
	
	<select id="getCount3" resultType="Double">
		select sum(money) from red_packet_details
		<where> 
			`time` &gt; #{timeStart} and `time` &lt; #{timeEnd}
		</where>
	</select>

</mapper>